{"version":3,"sources":["Components/Header.jsx","Loader/Loader.jsx","utils/utils.js","Components/Input.jsx","Components/Content.jsx","Components/Popular.jsx","Components/Film.jsx","Components/AboutUs.jsx","App.jsx","index.js"],"names":["Header","onClick","selectedFilm","className","to","Loader","KEY","URL_BETTER","URL_POPULAR","Input","value","onChange","setInputValue","onClear","onSubmit","e","type","placeholder","target","icon","faSearch","faTimes","Content","list","activePage","isLoading","getColorByRate","getFilms","setSelectedFilm","setActivePage","pagesCount","i","push","React","useEffect","faTrophy","films","length","map","film","index","filmId","src","posterUrl","alt","nameRu","Object","values","genres","genre","join","rating","style","num","href","Popular","colorPopular","faFireAlt","Film","window","scrollTo","posterUrlPreview","nameEn","nameOriginal","year","filmLength","countries","country","ratingKinopoisk","ratingImdb","AboutUs","faHeart","App","useState","filmsList","setFilmsList","setIsLoading","searchValue","setSearchValue","url","key","headers","axios","then","response","data","changePage","number","preventDefault","min","max","randomFilm","Math","floor","random","exact","path","element","vote","trim","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAqBeA,EAlBA,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACtB,OACQ,wBAAQC,UAAU,SAAlB,SACI,sBAAKA,UAAU,YAAf,UACA,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,IAAlC,8DACA,qBAAKD,UAAU,SAAf,SACI,qBAAIA,UAAU,eAAd,UACI,6BAAI,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,IAAlC,oDACJ,6BAAI,cAAC,IAAD,CAAMD,UAAU,eAAeC,GAAG,WAAlC,4EACJ,6BAAI,cAAC,IAAD,CAAMD,UAAU,eAAeC,GAAI,WAAaF,EAAeD,QAASA,EAAxE,qGACJ,6BAAI,cAAC,IAAD,CAAME,UAAU,eAAeC,GAAG,SAAlC,oDCRbC,G,YAHA,kBAAM,qBAAKF,UAAU,a,cCAvBG,EAAM,uCACNC,EAAa,uFACbC,EAAc,0FCWZC,EAXD,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,QAC5C,OACI,uBAAMV,UAAU,kBAAkBW,SAAU,SAACC,GAAD,OAAOJ,EAASI,IAA5D,UACI,uBAAOC,KAAK,OAAQC,YAAY,mIAA0BP,MAAOA,EAAOC,SAAU,SAACI,GAAD,OAAOH,EAAcG,EAAEG,OAAOR,UAChH,cAAC,IAAD,CAAiBP,UAAU,uBAAuBgB,KAAMC,MACvDV,GAAS,cAAC,IAAD,CAAiBP,UAAU,sBAAsBgB,KAAME,IAASpB,QAASY,QC0ChFS,EA3CC,SAAC,GAEb,IAF4J,IAAD,EAA7IC,EAA6I,EAA7IA,KAAMC,EAAuI,EAAvIA,WAAYvB,EAA2H,EAA3HA,QAASwB,EAAkH,EAAlHA,UAAWC,EAAuG,EAAvGA,eAAgBhB,EAAuF,EAAvFA,MAAOC,EAAgF,EAAhFA,SAAUE,EAAsE,EAAtEA,QAASc,EAA6D,EAA7DA,SAAUC,EAAmD,EAAnDA,gBAAiBC,EAAkC,EAAlCA,cAAejB,EAAmB,EAAnBA,cAClIkB,EAAa,GACXC,EAAI,EAAGA,EAAIR,EAAKO,cAChBC,GAAK,IADuBA,IAEhCD,EAAWE,KAAKD,EAAE,GAMtB,OAJAE,IAAMC,WAAU,WACZL,EAAc,GACdF,EAASpB,EAAYD,KACtB,IAEC,qBAAKH,UAAU,UAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAIA,UAAU,uBAAd,uFAAmD,cAAC,IAAD,CAAiBA,UAAU,qBAAqBgB,KAAMgB,MAAzG,OACD,cAAC,EAAD,CAAOzB,MAAOA,EAAOC,SAAUA,EAAUC,cAAeA,EAAeC,QAASA,IAC9EY,EACG,cAAC,EAAD,IAEA,qBAAKtB,UAAU,QAAf,UACK,OAAJoB,QAAI,IAAJA,GAAA,UAAAA,EAAMa,aAAN,eAAaC,QAASd,EAAKa,MAAME,KAAI,SAACC,EAAMC,GAAP,OAClC,yBAAQrC,UAAU,cAAlB,UACI,cAAC,IAAD,CAAOA,UAAU,cAAcC,GAAI,WAAamC,EAAKE,OAAQxC,QAAS,kBAAM2B,EAAgBW,EAAKE,SAAjG,SAA0G,qBAAKtC,UAAU,iBAAiBuC,IAAKH,EAAKI,UAAWC,IAAI,OACnK,4BAAYzC,UAAU,cAAtB,SAAqCoC,EAAKM,SAC1C,4BAAY1C,UAAU,cAAtB,SAAqC2C,OAAOC,OAAOR,EAAKS,OAAOV,KAAI,SAAAW,GAAK,OAAIA,EAAK,UAAiBC,KAAK,QACtF,SAAhBX,EAAKY,OAAoB,qBAAKhD,UAAW,gBAAiBiD,MAAO,CAAC,OAAS,aAAT,OAAuB1B,EAAea,EAAKY,UAApF,SAAiGZ,EAAKY,SAAgB,KAJ/GZ,EAAO,IAAMC,MAOlD,oBAAIrC,UAAU,QAAd,4GAGR,qBAAKA,UAAU,YAAf,SACK2B,EAAWO,OAASP,EAAWQ,KAAI,SAACe,EAAKb,GAAN,OAChC,mBAAGrC,UAAWqB,IAAe6B,EAAM,wCAA0C,iBAA0CC,KAAK,IAAKrD,QAAS,SAACc,GAAD,OAAOd,EAAQc,EAAGR,EAAY8C,IAAxK,SAA+KA,GAA3EA,EAAM,IAAMb,MAGhH,mBAAGrC,UAAU,wCAAwCmD,KAAK,IAA1D,uB,wBCQTC,G,MA5CC,SAAC,GAEb,IAFiH,IAAD,EAAlG9B,EAAkG,EAAlGA,UAAWF,EAAuF,EAAvFA,KAAMI,EAAiF,EAAjFA,SAAUC,EAAuE,EAAvEA,gBAAiBJ,EAAsD,EAAtDA,WAAYK,EAA0C,EAA1CA,cAAe5B,EAA2B,EAA3BA,QAASuD,EAAkB,EAAlBA,aACxF1B,EAAa,GACXC,EAAI,EAAGA,EAAIR,EAAKO,cAChBC,EAAI,IADwBA,IAEhCD,EAAWE,KAAKD,EAAE,GAMtB,OAJAE,IAAMC,WAAU,WACZL,EAAc,GACdF,EAASnB,EAAaF,KACvB,IAEC,qBAAKH,UAAU,UAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAIA,UAAU,wBAAd,+GAAwD,cAAC,IAAD,CAAiBA,UAAU,oBAAoBgB,KAAMsC,MAA7G,OACKhC,EACD,cAAC,EAAD,IAEA,qBAAKtB,UAAU,QAAf,UACK,OAAJoB,QAAI,IAAJA,GAAA,UAAAA,EAAMa,aAAN,eAAaC,QAASd,EAAKa,MAAME,KAAI,SAACC,EAAMC,GAAP,OAE9B,yBAAQrC,UAAU,cAAlB,UACI,cAAC,IAAD,CAAMC,GAAI,WAAamC,EAAKE,OAAQtC,UAAU,cAAcF,QAAS,kBAAM2B,EAAgBW,EAAKE,SAAhG,SAAyG,qBAAKtC,UAAU,iBAAiBuC,IAAKH,EAAKI,UAAWC,IAAI,OAClK,4BAAYzC,UAAU,cAAtB,SAAqCoC,EAAKM,SAC1C,4BAAY1C,UAAU,cAAtB,SAAqC2C,OAAOC,OAAOR,EAAKS,OAAOV,KAAI,SAAAW,GAAK,OAAIA,EAAK,UAAiBC,KAAK,QACvG,qBAAK/C,UAAW,gBAAiBiD,MAAO,CAAC,OAAS,aAAT,OAAuBI,EAAchB,EAAQ,EAAyB,IAAlBhB,EAAa,KAAa,KAAvH,SAAgIgB,EAAQ,EAAyB,IAAlBhB,EAAa,OAJ3He,EAAO,IAAMC,MAOtD,4FAGR,qBAAKrC,UAAU,YAAf,SACK2B,EAAWO,OAASP,EAAWQ,KAAI,SAACe,EAAKb,GAAN,OAC5B,mBAAGrC,UAAWqB,IAAe6B,EAAM,wCAA0C,iBAA0CC,KAAK,IAAKrD,QAAS,SAACc,GAAD,OAAOd,EAAQc,EAAGP,EAAa6C,IAAzK,SAAgLA,GAA5EA,EAAM,IAAMb,MAGpH,mBAAGrC,UAAU,wCAAyCmD,KAAK,IAA3D,wBCdTI,G,MAzBF,SAAC,GAAoC,IAAnCxD,EAAkC,EAAlCA,aAAcyB,EAAoB,EAApBA,SAAUJ,EAAU,EAAVA,KAKnC,OAJAU,IAAMC,WAAU,WACZyB,OAAOC,SAAS,EAAG,KACnBjC,EJAoB,sDIAGrB,EAAKJ,KAC7B,CAACA,IAEA,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,eAAeuC,IAAKnB,EAAKoB,UAAWC,IAAI,KACvD,qBAAKzC,UAAU,YAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,gBAAf,SAA+B,qBAAKuC,IAAKnB,EAAKsC,qBAC9C,qBAAI1D,UAAU,oBAAd,UACI,oBAAIA,UAAU,aAAd,SAA4BoB,EAAKsB,QAAUtB,EAAKuC,QAAUvC,EAAKwC,cAAgB,wEAC/E,qBAAI5D,UAAU,aAAd,iCAAiCoB,EAAKyC,QACtC,qBAAI7D,UAAU,aAAd,4HAAiDoB,EAAK0C,WAAtD,qCACA,qBAAI9D,UAAU,aAAd,UAA4BoB,EAAK2C,WAAa3C,EAAK2C,UAAU7B,OAAS,EAAI,uCAAW,uCAArF,KAAiGd,EAAK2C,WAAa3C,EAAK2C,UAAU5B,KAAI,SAAA6B,GAAO,OAAIA,EAAO,WAAkBjB,KAAK,SAC/K,qBAAI/C,UAAU,aAAd,6CAAmCoB,EAAKyB,QAAUzB,EAAKyB,OAAOV,KAAI,SAAAW,GAAK,OAAIA,EAAK,SAAgBC,KAAK,SACrG,qBAAI/C,UAAU,aAAd,yDAAqCoB,EAAK6C,iBAAmB7C,EAAK8C,2BCQ3EC,G,MAxBC,WACZ,OACI,sBAAKnE,UAAU,QAAf,UACI,qBAAIA,UAAU,qBAAd,mDAA2C,cAAC,IAAD,CAAiBA,UAAU,oBAAoBgB,KAAMoD,MAAhG,OACI,qBAAIpE,UAAU,oBAAd,UACI,oBAAIA,UAAU,mBAAd,kNACA,oBAAIA,UAAU,mBAAd,0MACA,oBAAIA,UAAU,mBAAd,6LACA,oBAAIA,UAAU,mBAAd,wMACA,oBAAIA,UAAU,mBAAd,0MAER,sBAAKA,UAAU,qBAAf,UACI,49BAIA,opCCuEDqE,MAhFf,WACI,MAAkCvC,IAAMwC,SAAS,IAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoC1C,IAAMwC,SAAS,GAAnD,mBAAOjD,EAAP,KAAmBK,EAAnB,KACA,EAAkCI,IAAMwC,UAAS,GAAjD,mBAAOhD,EAAP,KAAkBmD,EAAlB,KACA,EAAsC3C,IAAMwC,SAAS,IAArD,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAwC7C,IAAMwC,SAAS,GAAvD,mBAAOvE,EAAP,KAAqB0B,EAArB,KAkBMD,EAAY,SAACoD,EAAKC,GAII,IAJCtE,EAIF,uDAJU,GAClBuE,EAGQ,uDAHC,CACR,YAAaD,EACb,eAAgB,oBAEhBJ,GAAa,GACbM,IAAMH,EAAMrE,EAAO,CACfuE,QAASA,IAEZE,MAAK,SAAAC,GAAQ,OAAIT,EAAaS,EAASC,SACvCF,MAAK,kBAAMP,GAAa,OAGvCU,EAAa,SAACvE,EAAGgE,EAAKQ,GACxBxE,EAAEyE,iBACF7D,EAASoD,EAAKzE,EAAKiF,GACnB5B,OAAOC,SAAS,EAAG,KACnB/B,EAAc0D,IAEZ3E,EAAgB,SAACF,GACnBoE,EAAepE,IAsBrB,OACE,qBAAKP,UAAU,MAAf,SACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAQF,QARG,SAACc,GAA6B,IAA1B0E,EAAyB,uDAAnB,EAAGC,EAAgB,uDAAV,MAC5BC,EAAaC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,IAAQA,EAC7D7D,EAAgB+D,IAMiBzF,aAAcA,IAC3C,eAAC,IAAD,WACI,cAAC,IAAD,CAAO6F,OAAK,EAACC,KAAM,IAAKC,QAAU,cAAC,EAAD,CAAS1E,KAAMmD,EAAWlD,WAAYA,EAAYK,cAAeA,EAAe5B,QAASqF,EAAY7D,UAAWA,EAAWE,SAAUA,EAAUD,eAzDtK,SAACwE,GACpB,OAAIA,EAAO,IACA,QACAA,EAAO,IACP,SAEA,OAmD8MxF,MAAOmE,EAAalE,SAxB7N,SAACI,GACjBA,EAAEyE,iBACF5E,EAAciE,GACc,MAAb,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAasB,QACTxE,EAASpB,EAAYD,EAAKkB,GAE9BG,EN1Dc,gFM0DOrB,EAAKuE,IAkBsOjD,gBAAiBA,EAAiBhB,cAAeA,EAAeC,QAfxT,WACZiE,EAAe,IACfnD,EAASpB,EAAYD,QAcb,cAAC,IAAD,CAAQ0F,KAAM,WAAYC,QAAU,cAAC,EAAD,CAAS1E,KAAMmD,EAAWjD,UAAWA,EAAW+B,aAhE3E,CACjB,EAAG,UACH,EAAG,UACH,EAAG,WA6DqH7B,SAAUA,EAAUC,gBAAiBA,EAAiBJ,WAAYA,EAAYK,cAAeA,EAAe5B,QAASqF,MACrO,cAAC,IAAD,CAAQU,KAAM,YAAaC,QAAU,cAAC,EAAD,CAAM1E,KAAMmD,EAAWxE,aAAcA,EAAcyB,SAAUA,MAClG,cAAC,IAAD,CAAQqE,KAAM,SAAUC,QAAU,cAAC,EAAD,eC/ElDG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6326bd15.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Header.scss';\r\nimport {Link} from \"react-router-dom\";\r\nconst Header = ({onClick, selectedFilm}) => {\r\n    return (\r\n            <header className='Header'>\r\n                <div className=\"container\">\r\n                <Link className=\"Header__logo\" to=\"/\">КиноМикс</Link>\r\n                <nav className=\"navbar\">\r\n                    <ul className=\"navbar__menu\">\r\n                        <li><Link className=\"navbar__link\" to=\"/\" >лучшее</Link></li>\r\n                        <li><Link className=\"navbar__link\" to=\"/popular\" >популярное</Link></li>\r\n                        <li><Link className=\"navbar__link\" to={\"/film/id\" + selectedFilm}  onClick={onClick}>случайный фильм</Link></li>\r\n                        <li><Link className=\"navbar__link\" to=\"/about\" >о нас</Link></li>\r\n                    </ul>\r\n                </nav>\r\n                </div>\r\n            </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../styles/Loader.scss';\r\nconst Loader = () => <div className=\"Loader\"></div>\r\n\r\n\r\nexport default Loader;","import Loading from \"../Loader/Loader\";\r\n\r\nexport const KEY = '9f79c556-ed7b-42b9-8c9a-09718e0c0acc';\r\nexport const URL_BETTER = 'https://kinopoiskapiunofficial.tech/api/v2.2/films/top?type=TOP_250_BEST_FILMS&page=';\r\nexport const URL_POPULAR = 'https://kinopoiskapiunofficial.tech/api/v2.2/films/top?type=TOP_100_POPULAR_FILMS&page=';\r\nexport const URL_SEARCH = 'https://kinopoiskapiunofficial.tech/api/v2.1/films/search-by-keyword?keyword=';\r\nexport const URL_SELECTED = 'https://kinopoiskapiunofficial.tech/api/v2.2/films/';","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch, faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Input = ({value, onChange, setInputValue, onClear}) => {\r\n    return (\r\n        <form className=\"Content__search\" onSubmit={(e) => onChange(e)}>\r\n            <input type=\"text\"  placeholder=\"Введите название фильма\" value={value} onChange={(e) => setInputValue(e.target.value)}/>\r\n            <FontAwesomeIcon className=\"Content__search-icon\" icon={faSearch}></FontAwesomeIcon>\r\n            {value && <FontAwesomeIcon className=\"Content__close-icon\" icon={faTimes} onClick={onClear}></FontAwesomeIcon>}\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\nimport '../styles/Content.scss';\r\nimport Loading from \"../Loader/Loader\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faTrophy} from '@fortawesome/free-solid-svg-icons'\r\nimport {KEY, URL_BETTER} from \"../utils/utils\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Input from \"./Input\";\r\nconst Content = ({list, activePage, onClick, isLoading, getColorByRate, value, onChange, onClear, getFilms, setSelectedFilm, setActivePage, setInputValue}) => {\r\n    const pagesCount = [];\r\n    for(let i = 0; i < list.pagesCount; i++){\r\n        if (i >= 20) break;\r\n        pagesCount.push(i+1);\r\n    }\r\n    React.useEffect(() => {\r\n        setActivePage(1);\r\n        getFilms(URL_BETTER, KEY);\r\n    }, []);\r\n    return (\r\n        <div className=\"Content\">\r\n            <div className=\"container\">\r\n                <h2 className=\"Popular__title title\">Лучшие фильмы <FontAwesomeIcon className='Content__fire-icon' icon={faTrophy}></FontAwesomeIcon> </h2>\r\n               <Input value={value} onChange={onChange} setInputValue={setInputValue} onClear={onClear}></Input>\r\n                {isLoading ?\r\n                    <Loading></Loading>\r\n                    :\r\n                    <div className=\"films\">\r\n                    {list?.films?.length ? list.films.map((film, index) =>\r\n                        <figure className=\"films__card\" key={film + ':' + index}>\r\n                            <Link  className=\"films__link\" to={\"/film/id\" + film.filmId} onClick={() => setSelectedFilm(film.filmId)}><img className=\"films__picture\" src={film.posterUrl} alt=\"\"/></Link>\r\n                            <figcaption className=\"films__name\">{film.nameRu}</figcaption>\r\n                            <figcaption className=\"films__tags\">{Object.values(film.genres.map(genre => genre['genre' || 0])).join(', ')}</figcaption>\r\n                            {film.rating !== 'null' ? <div className={'films__rating'} style={{'border': `2px solid ${getColorByRate(film.rating)}`}}>{film.rating}</div> : ''}\r\n                        </figure>)\r\n                        :\r\n                        <h2 className=\"title\">Нет таких фильмов</h2>\r\n                    }\r\n                </div>}\r\n                <div className=\"pageCount\">\r\n                    {pagesCount.length ? pagesCount.map((num, index) =>\r\n                        <a className={activePage === num ? 'pageCount__btn pageCount__btn--active' : 'pageCount__btn'} key={num + ':' + index} href=\"#\"  onClick={(e) => onClick(e, URL_BETTER, num)}>{num}</a>\r\n                    )\r\n                    :\r\n                        <a className=\"pageCount__btn pageCount__btn--active\" href=\"#\">1</a>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Content;","import React from 'react';\r\nimport Loading from \"../Loader/Loader\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFireAlt} from '@fortawesome/free-solid-svg-icons'\r\nimport \"../styles/Popular.scss\";\r\nimport {KEY,     URL_POPULAR} from \"../utils/utils\";\r\nimport {Link} from \"react-router-dom\";\r\nconst Popular = ({isLoading, list, getFilms, setSelectedFilm, activePage, setActivePage, onClick, colorPopular}) => {\r\n    const pagesCount = [];\r\n    for(let i = 0; i < list.pagesCount; i++){\r\n        if (i > 20) break;\r\n        pagesCount.push(i+1);\r\n    }\r\n    React.useEffect(() => {\r\n        setActivePage(1);\r\n        getFilms(URL_POPULAR, KEY);\r\n    }, []);\r\n    return (\r\n        <div className=\"Popular\">\r\n            <div className=\"container\">\r\n                <h2 className=\"Popular__title title \">Популярные фильмы <FontAwesomeIcon className='Popular__cup-icon' icon={faFireAlt}></FontAwesomeIcon> </h2>\r\n                    {isLoading ?\r\n                    <Loading></Loading>\r\n                    :\r\n                    <div className=\"films\">\r\n                    {list?.films?.length ? list.films.map((film, index) =>\r\n\r\n                            <figure className=\"films__card\" key={film + ':' + index}>\r\n                                <Link to={\"/film/id\" + film.filmId} className=\"films__link\" onClick={() => setSelectedFilm(film.filmId)}><img className=\"films__picture\" src={film.posterUrl} alt=\"\"/></Link>\r\n                                <figcaption className=\"films__name\">{film.nameRu}</figcaption>\r\n                                <figcaption className=\"films__tags\">{Object.values(film.genres.map(genre => genre['genre' || 0])).join(', ')}</figcaption>\r\n                                <div className={'films__rating'} style={{'border': `2px solid ${colorPopular[(index + 1) + ((activePage - 1) * 20)] || ''}`}}>{(index + 1) + ((activePage - 1) * 20)}</div>\r\n                            </figure>)\r\n                        :\r\n                        <div>нет фильма</div>\r\n                    }\r\n                    </div>}\r\n                <div className=\"pageCount\">\r\n                    {pagesCount.length ? pagesCount.map((num, index) =>\r\n                            <a className={activePage === num ? 'pageCount__btn pageCount__btn--active' : 'pageCount__btn'} key={num + ':' + index} href=\"#\"  onClick={(e) => onClick(e, URL_POPULAR, num)}>{num}</a>\r\n                        )\r\n                        :\r\n                        <a className=\"pageCount__btn pageCount__btn--active\"  href=\"#\">1</a>\r\n                    }\r\n\r\n                </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Popular;","import React from 'react';\r\nimport '../styles/Film.scss';\r\nimport {KEY, URL_SELECTED} from \"../utils/utils\";\r\nconst Film = ({selectedFilm, getFilms, list}) => {\r\n    React.useEffect(() => {\r\n        window.scrollTo(0, 650);\r\n        getFilms(URL_SELECTED, KEY, selectedFilm);\r\n    }, [selectedFilm]);\r\n    return (\r\n        <div className=\"Film\">\r\n            <img className=\"Film__poster\" src={list.posterUrl} alt=\"\"/>\r\n            <div className=\"container\">\r\n                <div className=\"Film__display\">\r\n                    <div className=\"Film__picture\"><img src={list.posterUrlPreview}></img></div>\r\n                    <ul className=\"Film__information\">\r\n                        <li className=\"Film__item\">{list.nameRu || list.nameEn || list.nameOriginal || 'Нет названия'}</li>\r\n                        <li className=\"Film__item\">год: {list.year}</li>\r\n                        <li className=\"Film__item\">длительность фильма: {list.filmLength} минут</li>\r\n                        <li className=\"Film__item\">{list.countries && list.countries.length > 1 ? 'страны' : 'страна'}: {list.countries && list.countries.map(country => country['country' || 0]).join(', ')}</li>\r\n                        <li className=\"Film__item\">жанры: {list.genres && list.genres.map(genre => genre['genre' || 0]).join(', ')}</li>\r\n                        <li className=\"Film__item\">рейтинг: {list.ratingKinopoisk || list.ratingImdb}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Film;","import React from 'react';\r\nimport '../styles/AboutUs.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faHeart} from '@fortawesome/free-solid-svg-icons'\r\nconst AboutUs = () => {\r\n    return (\r\n        <div className=\"About\">\r\n            <h2 className=\"About__title title\">Про нас <FontAwesomeIcon className=\"About__icon-heart\" icon={faHeart}></FontAwesomeIcon> </h2>\r\n                <ul className=\"About__advantages\">\r\n                    <li className=\"About__advantage\">🔥 У нас можно смотреть кино (и сериалы);</li>\r\n                    <li className=\"About__advantage\">🔥🔥 У нас можно купить билеты в кино;</li>\r\n                    <li className=\"About__advantage\">🔥🔥🔥 У нас можно читать про кино;</li>\r\n                    <li className=\"About__advantage\">🔥🔥🔥🔥 У нас можно обсуждать кино;</li>\r\n                    <li className=\"About__advantage\">🔥🔥🔥🔥🔥 У нас можно оценить кино</li>\r\n                </ul>\r\n            <div className=\"About__description\">\r\n                <p>\r\n                    Сначала у нас появляется слух о новом фильме или сериале, потом он превращается в новость, мы показываем вам постер,\r\n                    тизер, трейлер, вы нажимаете «буду смотреть», чтобы не пропустить фильм.\r\n                </p>\r\n                <p>Потом вы читаете нашу рецензию, покупаете у нас билеты, ставите фильму оценку, пишете отзыв, потом еще раз пересматриваете\r\n                    фильм, когда он появляется у нас онлайн. Фильм уходит в архив, а мы с вами ждем новый фильм или сериал.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutUs;","\nimport './styles/App.scss';\nimport Header from \"./Components/Header\";\nimport Content from \"./Components/Content\";\nimport axios from \"axios\";\nimport {URL_BETTER, KEY, URL_SEARCH} from \"./utils/utils\";\nimport React from \"react\";\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport Popular from \"./Components/Popular\";\nimport Film from \"./Components/Film\";\nimport AboutUs from \"./Components/AboutUs\";\nfunction App() {\n    const [filmsList, setFilmsList] = React.useState([]);\n    const [activePage, setActivePage] = React.useState(1);\n    const [isLoading, setIsLoading] = React.useState(false);\n    const [searchValue, setSearchValue] = React.useState('');\n    const [selectedFilm, setSelectedFilm] = React.useState(1);\n    //Colors for the most popular movies\n    const colorPopular = {\n        1: '#f3cc14',\n        2: '#c0c0c0',\n        3: '#cd7f32'\n    }\n    // A function that gives the color of the border depending on the rating of the movie\n    const getColorByRate = (vote) => {\n        if (vote > 8.3){\n            return 'green';\n        } else if (vote > 6.1){\n            return 'yellow';\n        } else {\n            return 'red';\n        }\n    }\n    // Query to the server to receive movies\n    const getFilms =  (url, key, value = '',\n                       headers= {\n                        'X-API-KEY': key,\n                        'Content-type': 'application/json'\n                        } ) => {\n                        setIsLoading(true);\n                        axios(url + value, {\n                            headers: headers,\n                         })\n                        .then(response => setFilmsList(response.data))\n                        .then(() => setIsLoading(false));\n    }\n    //  Change page buttons\n    const changePage = (e, url, number) => {\n        e.preventDefault();\n        getFilms(url, KEY, number);\n        window.scrollTo(0, 650);\n        setActivePage(number);\n    }\n    const setInputValue = (value) => {\n        setSearchValue(value);\n    }\n    // Search from input\n    const searchQuery = (e) => {\n        e.preventDefault();\n        setInputValue(searchValue);\n        if (searchValue?.trim() === ''){\n                getFilms(URL_BETTER, KEY, activePage);\n        } else{\n            getFilms(URL_SEARCH, KEY, searchValue);\n        }\n    }\n    const onClear = () => {\n        setSearchValue('');\n        getFilms(URL_BETTER, KEY);\n    }\n    // Get random film from the server\n    const randomFilm = (e, min = 1, max = 65427) => {\n        const randomFilm = Math.floor(Math.random() * (max - min)) + min\n        setSelectedFilm(randomFilm);\n    }\n\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n            <Header onClick={randomFilm} selectedFilm={selectedFilm}></Header>\n            <Routes>\n                <Route exact path={\"/\"} element={ <Content list={filmsList} activePage={activePage} setActivePage={setActivePage} onClick={changePage} isLoading={isLoading} getFilms={getFilms} getColorByRate={getColorByRate} value={searchValue} onChange={searchQuery} setSelectedFilm={setSelectedFilm} setInputValue={setInputValue} onClear={onClear}></Content>}/>\n                <Route  path={\"/popular\"} element={ <Popular list={filmsList} isLoading={isLoading} colorPopular={colorPopular} getFilms={getFilms} setSelectedFilm={setSelectedFilm} activePage={activePage} setActivePage={setActivePage} onClick={changePage}></Popular>}/>\n                <Route  path={\"/film/:id\"} element={ <Film list={filmsList} selectedFilm={selectedFilm} getFilms={getFilms}></Film>}/>\n                <Route  path={\"/about\"} element={ <AboutUs></AboutUs>}/>\n            </Routes>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}